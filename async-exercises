#!/bin/bash

# Async Exercises Runner
# Makes it super easy to work through the exercises

set -e

# Colors for pretty output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
CYAN='\033[0;36m'
NC='\033[0m' # No Color

# Function to print colored output
print_color() {
    printf "${1}${2}${NC}\n"
}

# Check if cargo is installed
if ! command -v cargo &> /dev/null; then
    print_color $RED "❌ Cargo not found. Please install Rust first."
    exit 1
fi

# Main command routing
case "${1:-help}" in
    "list"|"ls")
        print_color $BLUE "📚 Running exercise list..."
        cargo run --bin run -- list
        ;;
    "run")
        if [ -z "$2" ]; then
            print_color $RED "❌ Please specify an exercise (e.g., ./async-exercises run 1.1)"
            exit 1
        fi
        print_color $GREEN "🚀 Running exercise $2..."
        cargo run --bin run -- run "$2"
        ;;
    "check")
        if [ -z "$2" ]; then
            print_color $RED "❌ Please specify an exercise (e.g., ./async-exercises check 1.1)"
            exit 1
        fi
        print_color $BLUE "🔍 Checking exercise $2..."
        cargo run --bin run -- check "$2"
        ;;
    "test")
        if [ -z "$2" ]; then
            print_color $RED "❌ Please specify an exercise (e.g., ./async-exercises test 1.1)"
            exit 1
        fi
        print_color $YELLOW "🧪 Testing exercise $2..."
        cargo run --bin run -- test "$2"
        ;;
    "progress")
        print_color $CYAN "📊 Showing progress..."
        cargo run --bin run -- progress
        ;;
    "next")
        print_color $PURPLE "⏭️ Finding next exercise..."
        cargo run --bin run -- next
        ;;
    "reset")
        if [ -z "$2" ]; then
            print_color $RED "❌ Please specify an exercise (e.g., ./async-exercises reset 1.1)"
            exit 1
        fi
        print_color $YELLOW "🔄 Resetting exercise $2..."
        cargo run --bin run -- reset "$2"
        ;;
    "help"|"-h"|"--help")
        print_color $BLUE "🚀 Rust Async Programming Exercises"
        echo ""
        print_color $GREEN "Usage:"
        echo "  ./async-exercises <command> [exercise]"
        echo ""
        print_color $YELLOW "Commands:"
        echo "  list              📚 List all exercises"
        echo "  run <exercise>    🚀 Run an exercise (e.g., 1.1)"
        echo "  check <exercise>  🔍 Check your solution"
        echo "  test <exercise>   🧪 Run tests for an exercise"
        echo "  progress          📊 Show your progress"
        echo "  next              ⏭️ Show next exercise"
        echo "  reset <exercise>  🔄 Reset exercise to original state"
        echo "  help              ❓ Show this help"
        echo ""
        print_color $CYAN "Examples:"
        echo "  ./async-exercises list"
        echo "  ./async-exercises run 1.1"
        echo "  ./async-exercises check 1.1"
        echo "  ./async-exercises progress"
        echo "  ./async-exercises next"
        ;;
    *)
        print_color $RED "❌ Unknown command: $1"
        print_color $YELLOW "Run './async-exercises help' for usage information"
        exit 1
        ;;
esac